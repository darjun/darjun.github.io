<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 大俊的博客</title>
    <link>https://darjun.github.io/categories/go/</link>
    <description>Recent content in Go on 大俊的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>大俊</copyright>
    <lastBuildDate>Mon, 19 Jul 2021 20:22:34 +0000</lastBuildDate><atom:link href="https://darjun.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go 每日一库之 gorilla/mux</title>
      <link>https://darjun.github.io/2021/07/19/godailylib/gorilla/mux/</link>
      <pubDate>Mon, 19 Jul 2021 20:22:34 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/07/19/godailylib/gorilla/mux/</guid>
      <description>简介 gorilla/mux是 gorilla Web 开发工具包中的路由管理库。gorilla Web 开发包是 Go 语言中辅助开发 Web 服务器的工具包。它包括 Web 服务器开发的各个</description>
    </item>
    
    <item>
      <title>Go 每日一库之 net/http（基础和中间件）</title>
      <link>https://darjun.github.io/2021/07/13/in-post/godailylib/nethttp/</link>
      <pubDate>Tue, 13 Jul 2021 06:12:35 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/07/13/in-post/godailylib/nethttp/</guid>
      <description>简介 几乎所有的编程语言都以Hello World作为入门程序的示例，其中有一部分以编写一个 Web 服务器作为实战案例的开始。每种编程语言都有很多用于</description>
    </item>
    
    <item>
      <title>Go 每日一库之 colly</title>
      <link>https://darjun.github.io/2021/06/30/godailylib/colly/</link>
      <pubDate>Thu, 01 Jul 2021 07:09:00 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/30/godailylib/colly/</guid>
      <description>简介 colly是用 Go 语言编写的功能强大的爬虫框架。它提供简洁的 API，拥有强劲的性能，可以自动处理 cookie&amp;amp;session，还有</description>
    </item>
    
    <item>
      <title>Go 每日一库之 termtables</title>
      <link>https://darjun.github.io/2021/06/29/godailylib/termtables/</link>
      <pubDate>Tue, 29 Jun 2021 22:18:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/29/godailylib/termtables/</guid>
      <description>简介 今天学个简单点的😀，termtables处理表格形式数据的输出。适用于随时随地的输出一些状态或统计数据，便于观察和调试。是一个很小巧的工</description>
    </item>
    
    <item>
      <title>Go 每日一库之 resty</title>
      <link>https://darjun.github.io/2021/06/26/godailylib/resty/</link>
      <pubDate>Fri, 25 Jun 2021 10:56:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/26/godailylib/resty/</guid>
      <description>简介 resty是 Go 语言的一个 HTTP client 库。resty功能强大，特性丰富。它支持几乎所有的 HTTP 方法（GET/POST/PUT/DELETE/OPTIO</description>
    </item>
    
    <item>
      <title>Go 每日一库之 dateparse</title>
      <link>https://darjun.github.io/2021/06/24/godailylib/dateparse/</link>
      <pubDate>Thu, 24 Jun 2021 06:37:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/24/godailylib/dateparse/</guid>
      <description>简介 不管什么时候，处理时间总是让人头疼的一件事情。因为时间格式太多样化了，再加上时区，夏令时，闰秒这些细枝末节处理起来更是困难。所以在程序中</description>
    </item>
    
    <item>
      <title>Go 每日一库之 ozzo-validation</title>
      <link>https://darjun.github.io/2021/06/20/godailylib/ozzo-validation/</link>
      <pubDate>Sun, 20 Jun 2021 15:18:30 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/20/godailylib/ozzo-validation/</guid>
      <description>简介 ozzo-validation是一个非常强大的，灵活的数据校验库。与其他基于 struct tag 的数据校验库不同，ozzo-validation认为 struct tag</description>
    </item>
    
    <item>
      <title>用 Go 实现一个 GitHub Trending API</title>
      <link>https://darjun.github.io/2021/06/16/github-trending-api/</link>
      <pubDate>Wed, 16 Jun 2021 07:35:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/16/github-trending-api/</guid>
      <description>背景 上一篇文章Go 每日一库之 bubbletea我们介绍了炫酷的 TUI 程序框架 — bubbletea。最后实现了一个拉取 GitHub Trending 仓库，并显示在控制台的程</description>
    </item>
    
    <item>
      <title>为 tunny 提交的一次 PR</title>
      <link>https://darjun.github.io/2021/06/12/pr/tunny/</link>
      <pubDate>Sat, 12 Jun 2021 11:48:30 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/12/pr/tunny/</guid>
      <description>背景 上周我写了一篇文章Go 每日一库之 ants，深入剖析了ants这个 goroutine 池的实现。在反复阅读了多遍panjf2000关于ants的起源的文章—</description>
    </item>
    
    <item>
      <title>Go 每日一库之 bubbletea</title>
      <link>https://darjun.github.io/2021/06/11/godailylib/bubbletea/</link>
      <pubDate>Fri, 11 Jun 2021 07:47:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/11/godailylib/bubbletea/</guid>
      <description>简介 bubbletea是一个简单、小巧、可以非常方便地用来编写 TUI（terminal User Interface，控制台界面程序）程序的框架。内置</description>
    </item>
    
    <item>
      <title>Go 每日一库之 tunny</title>
      <link>https://darjun.github.io/2021/06/10/godailylib/tunny/</link>
      <pubDate>Thu, 10 Jun 2021 11:08:00 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/10/godailylib/tunny/</guid>
      <description>简介 之前写过一篇文章介绍了ants这个 goroutine 池实现。当时在网上查看相关资料的时候，发现了另外一个实现tunny。趁着时间相近，正好研究一番。也好</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 pprof</title>
      <link>https://darjun.github.io/2021/06/09/youdontknowgo/pprof/</link>
      <pubDate>Wed, 09 Jun 2021 06:35:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/09/youdontknowgo/pprof/</guid>
      <description>简介 Go 有非常多好用的工具，pprof 可以用来分析一个程序的性能。pprof 有以下 4 种类型： CPU profiling（CPU 性能分析）：这是最常使</description>
    </item>
    
    <item>
      <title>Go 每日一库之 ants（源码赏析）</title>
      <link>https://darjun.github.io/2021/06/04/godailylib/ants-src/</link>
      <pubDate>Fri, 04 Jun 2021 07:26:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/04/godailylib/ants-src/</guid>
      <description>简介 继上一篇Go 每日一库之 ants，这篇文章我们来一起看看ants的源码。 Pool 通过上篇文章，我们知道ants池有两种创建方式： p, _ := ants.</description>
    </item>
    
    <item>
      <title>Go 每日一库之 ants</title>
      <link>https://darjun.github.io/2021/06/03/godailylib/ants/</link>
      <pubDate>Thu, 03 Jun 2021 07:16:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/03/godailylib/ants/</guid>
      <description>简介 处理大量并发是 Go 语言的一大优势。语言内置了方便的并发语法，可以非常方便的创建很多个轻量级的 goroutine 并发处理任务。相比于创建多个线程，gorou</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 const</title>
      <link>https://darjun.github.io/2021/05/30/youdontknowgo/const/</link>
      <pubDate>Sun, 30 May 2021 16:38:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/30/youdontknowgo/const/</guid>
      <description>简介 常量可以说在每个代码文件中都存在，使用常量有很多好处： 避免魔法字面量，即直接出现在代码中的数字，字符串等。阅读代码的时候无法一眼看出它的</description>
    </item>
    
    <item>
      <title>Go 每日一库之 reflect</title>
      <link>https://darjun.github.io/2021/05/27/godailylib/reflect/</link>
      <pubDate>Thu, 27 May 2021 06:45:00 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/27/godailylib/reflect/</guid>
      <description>简介 反射是一种机制，在编译时不知道具体类型的情况下，可以透视结构的组成、更新值。使用反射，可以让我们编写出能统一处理所有类型的代码。甚至是编</description>
    </item>
    
    <item>
      <title>Go 每日一库之 fasttemplate</title>
      <link>https://darjun.github.io/2021/05/24/godailylib/fasttemplate/</link>
      <pubDate>Mon, 24 May 2021 23:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/24/godailylib/fasttemplate/</guid>
      <description>简介 fasttemplate是一个比较简单、易用的小型模板库。fasttemplate的作者valyala另外还开源了不少优秀的库，如大名鼎</description>
    </item>
    
    <item>
      <title>Go 每日一库之 gotalk</title>
      <link>https://darjun.github.io/2021/05/20/godailylib/gotalk/</link>
      <pubDate>Thu, 20 May 2021 07:25:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/20/godailylib/gotalk/</guid>
      <description>简介 gotalk专注于进程间的通信，致力于简化通信协议和流程。同时它： 提供简洁、清晰的 API； 支持 TCP，WebSocket 等协议； 采用非常</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 string</title>
      <link>https://darjun.github.io/2021/05/18/youdontknowgo/string/</link>
      <pubDate>Tue, 18 May 2021 06:35:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/18/youdontknowgo/string/</guid>
      <description>简介 字符串（string）是 Go 语言提供的一种基础数据类型。在编程开发中几乎随时都会使用。本文介绍字符串相关的知识，帮助你更好地理解和使用它。</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 slice</title>
      <link>https://darjun.github.io/2021/05/09/youdontknowgo/slice/</link>
      <pubDate>Sun, 09 May 2021 12:15:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/09/youdontknowgo/slice/</guid>
      <description>简介 切片（slice）是 Go 语言提供的一种数据结构，使用非常简单、便捷。但是由于实现层面的原因，切片也经常会产生让人疑惑的结果。掌握切片的底层</description>
    </item>
    
  </channel>
</rss>
