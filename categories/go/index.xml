<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on 大俊的博客</title>
    <link>https://darjun.github.io/categories/go/</link>
    <description>Recent content in Go on 大俊的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>大俊</copyright>
    <lastBuildDate>Sat, 12 Jun 2021 11:48:30 +0000</lastBuildDate><atom:link href="https://darjun.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为 tunny 提交的一次 PR</title>
      <link>https://darjun.github.io/2021/06/12/pr/tunny/</link>
      <pubDate>Sat, 12 Jun 2021 11:48:30 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/12/pr/tunny/</guid>
      <description>背景 上周我写了一篇文章Go 每日一库之 ants，深入剖析了ants这个 goroutine 池的实现。在反复阅读了多遍panjf2000关于ants的起源的文章—</description>
    </item>
    
    <item>
      <title>Go 每日一库之 bubbletea</title>
      <link>https://darjun.github.io/2021/06/11/godailylib/bubbletea/</link>
      <pubDate>Fri, 11 Jun 2021 07:47:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/11/godailylib/bubbletea/</guid>
      <description>简介 bubbletea是一个简单、小巧、可以非常方便地用来编写 TUI（terminal User Interface，控制台界面程序）程序的框架。内置</description>
    </item>
    
    <item>
      <title>Go 每日一库之 tunny</title>
      <link>https://darjun.github.io/2021/06/10/godailylib/tunny/</link>
      <pubDate>Thu, 10 Jun 2021 11:08:00 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/10/godailylib/tunny/</guid>
      <description>简介 之前写过一篇文章介绍了ants这个 goroutine 池实现。当时在网上查看相关资料的时候，发现了另外一个实现tunny。趁着时间相近，正好研究一番。也好</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 pprof</title>
      <link>https://darjun.github.io/2021/06/09/youdontknowgo/pprof/</link>
      <pubDate>Wed, 09 Jun 2021 06:35:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/09/youdontknowgo/pprof/</guid>
      <description>简介 Go 有非常多好用的工具，pprof 可以用来分析一个程序的性能。pprof 有以下 4 种类型： CPU profiling（CPU 性能分析）：这是最常使</description>
    </item>
    
    <item>
      <title>Go 每日一库之 ants（源码赏析）</title>
      <link>https://darjun.github.io/2021/06/04/godailylib/ants-src/</link>
      <pubDate>Fri, 04 Jun 2021 07:26:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/04/godailylib/ants-src/</guid>
      <description>简介 继上一篇Go 每日一库之 ants，这篇文章我们来一起看看ants的源码。 Pool 通过上篇文章，我们知道ants池有两种创建方式： p, _ := ants.</description>
    </item>
    
    <item>
      <title>Go 每日一库之 ants</title>
      <link>https://darjun.github.io/2021/06/03/godailylib/ants/</link>
      <pubDate>Thu, 03 Jun 2021 07:16:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/06/03/godailylib/ants/</guid>
      <description>简介 处理大量并发是 Go 语言的一大优势。语言内置了方便的并发语法，可以非常方便的创建很多个轻量级的 goroutine 并发处理任务。相比于创建多个线程，gorou</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 const</title>
      <link>https://darjun.github.io/2021/05/30/youdontknowgo/const/</link>
      <pubDate>Sun, 30 May 2021 16:38:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/30/youdontknowgo/const/</guid>
      <description>简介 常量可以说在每个代码文件中都存在，使用常量有很多好处： 避免魔法字面量，即直接出现在代码中的数字，字符串等。阅读代码的时候无法一眼看出它的</description>
    </item>
    
    <item>
      <title>Go 每日一库之 reflect</title>
      <link>https://darjun.github.io/2021/05/27/godailylib/reflect/</link>
      <pubDate>Thu, 27 May 2021 06:45:00 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/27/godailylib/reflect/</guid>
      <description>简介 反射是一种机制，在编译时不知道具体类型的情况下，可以透视结构的组成、更新值。使用反射，可以让我们编写出能统一处理所有类型的代码。甚至是编</description>
    </item>
    
    <item>
      <title>Go 每日一库之 fasttemplate</title>
      <link>https://darjun.github.io/2021/05/24/godailylib/fasttemplate/</link>
      <pubDate>Mon, 24 May 2021 23:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/24/godailylib/fasttemplate/</guid>
      <description>简介 fasttemplate是一个比较简单、易用的小型模板库。fasttemplate的作者valyala另外还开源了不少优秀的库，如大名鼎</description>
    </item>
    
    <item>
      <title>Go 每日一库之 gotalk</title>
      <link>https://darjun.github.io/2021/05/20/godailylib/gotalk/</link>
      <pubDate>Thu, 20 May 2021 07:25:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/20/godailylib/gotalk/</guid>
      <description>简介 gotalk专注于进程间的通信，致力于简化通信协议和流程。同时它： 提供简洁、清晰的 API； 支持 TCP，WebSocket 等协议； 采用非常</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 string</title>
      <link>https://darjun.github.io/2021/05/18/youdontknowgo/string/</link>
      <pubDate>Tue, 18 May 2021 06:35:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/18/youdontknowgo/string/</guid>
      <description>简介 字符串（string）是 Go 语言提供的一种基础数据类型。在编程开发中几乎随时都会使用。本文介绍字符串相关的知识，帮助你更好地理解和使用它。</description>
    </item>
    
    <item>
      <title>你不知道的 Go 之 slice</title>
      <link>https://darjun.github.io/2021/05/09/youdontknowgo/slice/</link>
      <pubDate>Sun, 09 May 2021 12:15:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/09/youdontknowgo/slice/</guid>
      <description>简介 切片（slice）是 Go 语言提供的一种数据结构，使用非常简单、便捷。但是由于实现层面的原因，切片也经常会产生让人疑惑的结果。掌握切片的底层</description>
    </item>
    
    <item>
      <title>Go 每日一库之 bytebufferpool</title>
      <link>https://darjun.github.io/2021/05/08/godailylib/bytebufferpool/</link>
      <pubDate>Sat, 08 May 2021 20:31:00 +0000</pubDate>
      
      <guid>https://darjun.github.io/2021/05/08/godailylib/bytebufferpool/</guid>
      <description>简介 在编程开发中，我们经常会需要频繁创建和销毁同类对象的情形。这样的操作很可能会对性能造成影响。这时，常用的优化手段就是使用对象池（obje</description>
    </item>
    
    <item>
      <title>Go 每日一库之 rxgo</title>
      <link>https://darjun.github.io/2020/10/11/godailylib/rxgo/</link>
      <pubDate>Sun, 11 Oct 2020 20:52:26 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/10/11/godailylib/rxgo/</guid>
      <description>简介 ReactiveX，简称为 Rx，是一个异步编程的 API。与 callback（回调）、promise（JS 提供这种方式）和 deferred</description>
    </item>
    
    <item>
      <title>Go 每日一库之 goquery</title>
      <link>https://darjun.github.io/2020/10/11/godailylib/goquery/</link>
      <pubDate>Sat, 10 Oct 2020 21:52:13 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/10/11/godailylib/goquery/</guid>
      <description>简介 goquery是用 Go 语言编写的一个类似于 jQuery 的库。它基于 HTML 解析库net/html和 CSS 库cascadia，提供与 jQuery 相近的接口。Go 著名的爬虫</description>
    </item>
    
    <item>
      <title>Go 每日一库之 air</title>
      <link>https://darjun.github.io/2020/09/27/godailylib/air/</link>
      <pubDate>Sun, 27 Sep 2020 22:24:52 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/27/godailylib/air/</guid>
      <description>简介 air是 Go 语言的热加载工具，它可以监听文件或目录的变化，自动编译，重启程序。大大提高开发期的工作效率。 快速使用 本文代码使用 Go Module</description>
    </item>
    
    <item>
      <title>Go 每日一库之 quicktemplate</title>
      <link>https://darjun.github.io/2020/09/26/godailylib/quicktemplate/</link>
      <pubDate>Sat, 26 Sep 2020 12:34:04 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/26/godailylib/quicktemplate/</guid>
      <description>简介 最近在整理我们项目代码的时候，发现有很多活动的代码在结构和提供的功能上都非常相似。为了方便今后的开发，我花了一点时间编写了一个生成代码框</description>
    </item>
    
    <item>
      <title>Go 每日一库之 quicktemplate</title>
      <link>https://darjun.github.io/2020/09/26/godailylib/quicktemplate/</link>
      <pubDate>Sat, 26 Sep 2020 12:34:04 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/26/godailylib/quicktemplate/</guid>
      <description>简介 最近在整理我们项目代码的时候，发现有很多活动的代码在结构和提供的功能上都非常相似。为了方便今后的开发，我花了一点时间编写了一个生成代码框</description>
    </item>
    
    <item>
      <title>Go 每日一库之 commonregex</title>
      <link>https://darjun.github.io/2020/09/05/godailylib/commonregex/</link>
      <pubDate>Sun, 06 Sep 2020 11:38:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/05/godailylib/commonregex/</guid>
      <description>简介 有时，我们会遇到一些需要使用字符串的匹配和查找的任务。并且我们知道这种情况下，使用正则表达式是最简洁和优雅的。为了完成某个任务特地去系统</description>
    </item>
    
    <item>
      <title>Go 每日一库之 commonregex</title>
      <link>https://darjun.github.io/2020/09/05/godailylib/commonregex/</link>
      <pubDate>Sun, 06 Sep 2020 11:38:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/05/godailylib/commonregex/</guid>
      <description>简介 有时，我们会遇到一些需要使用字符串的匹配和查找的任务。并且我们知道这种情况下，使用正则表达式是最简洁和优雅的。为了完成某个任务特地去系统</description>
    </item>
    
  </channel>
</rss>
