<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 大俊的博客</title>
    <link>https://darjun.github.io/post/</link>
    <description>Recent content in Posts on 大俊的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>大俊</copyright>
    <lastBuildDate>Mon, 15 Jun 2020 23:15:55 +0000</lastBuildDate>
    
	<atom:link href="https://darjun.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go 每日一库之 fyne</title>
      <link>https://darjun.github.io/2020/06/15/godailylib/fyne/</link>
      <pubDate>Mon, 15 Jun 2020 23:15:55 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/15/godailylib/fyne/</guid>
      <description>简介 Go 语言生态中，GUI 一直是短板，更别说跨平台的 GUI 了。fyne向前迈了一大步。fyne 是 Go 语言编写的跨平台的 UI 库，它可以很方便地移植到手机</description>
    </item>
    
    <item>
      <title>Go 每日一库之 casbin</title>
      <link>https://darjun.github.io/2020/06/12/godailylib/casbin/</link>
      <pubDate>Fri, 12 Jun 2020 23:06:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/12/godailylib/casbin/</guid>
      <description>简介 权限管理在几乎每个系统中都是必备的模块。如果项目开发每次都要实现一次权限管理，无疑会浪费开发时间，增加开发成本。因此，casbin库出现</description>
    </item>
    
    <item>
      <title>Go 每日一库之 twirp</title>
      <link>https://darjun.github.io/2020/06/07/godailylib/twirp/</link>
      <pubDate>Sun, 07 Jun 2020 17:18:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/07/godailylib/twirp/</guid>
      <description>简介 twirp是一个基于 Google Protobuf 的 RPC 框架。twirp通过在.proto文件中定义服务，然后自动生产服务器和客户端的代码。让我们可以将更多的精力放</description>
    </item>
    
    <item>
      <title>Go 每日一库之 rpcx</title>
      <link>https://darjun.github.io/2020/05/21/godailylib/rpcx/</link>
      <pubDate>Thu, 21 May 2020 23:04:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/21/godailylib/rpcx/</guid>
      <description>简介 在之前的两篇文章rpc和json-rpc中，我们介绍了 Go 标准库提供的rpc实现。在实际开发中，rpc库的功能还是有所欠缺。今天我们介绍一</description>
    </item>
    
    <item>
      <title>Go 每日一库之 jsonrpc</title>
      <link>https://darjun.github.io/2020/05/10/godailylib/jsonrpc/</link>
      <pubDate>Sun, 10 May 2020 19:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/10/godailylib/jsonrpc/</guid>
      <description>简介 在上一篇文章中我们介绍了 Go 标准库net/rpc的用法。在默认情况下，rpc库内部使用gob格式传输数据。我们仿造gob的编解码器实现了一</description>
    </item>
    
    <item>
      <title>Go 每日一库之 rpc</title>
      <link>https://darjun.github.io/2020/05/08/godailylib/rpc/</link>
      <pubDate>Fri, 08 May 2020 21:12:22 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/08/godailylib/rpc/</guid>
      <description>简介 RPC（Remote Procedure Call）是远程方法调用的缩写，它可以通过网络调用远程对象的方法。Go 标准库net/rpc提供了一个简单、强大且高</description>
    </item>
    
    <item>
      <title>Go 每日一库之 xorm</title>
      <link>https://darjun.github.io/2020/05/07/godailylib/xorm/</link>
      <pubDate>Thu, 07 May 2020 21:56:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/07/godailylib/xorm/</guid>
      <description>简介 Go 标准库提供的数据库接口database/sql比较底层，使用它来操作数据库非常繁琐，而且容易出错。因而社区开源了不少第三方库，如上一篇</description>
    </item>
    
    <item>
      <title>Go 每日一库之 sqlc</title>
      <link>https://darjun.github.io/2020/04/28/godailylib/sqlc/</link>
      <pubDate>Tue, 28 Apr 2020 23:09:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/28/godailylib/sqlc/</guid>
      <description>简介 在 Go 语言中编写数据库操作代码真的非常痛苦！database/sql标准库提供的都是比较底层的接口。我们需要编写大量重复的代码。大量的模板</description>
    </item>
    
    <item>
      <title>Go 每日一库之 nutsdb</title>
      <link>https://darjun.github.io/2020/04/25/godailylib/nutsdb/</link>
      <pubDate>Sat, 25 Apr 2020 23:40:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/25/godailylib/nutsdb/</guid>
      <description>简介 nutsdb是一个完全由 Go 编写的简单、快速、可嵌入的持久化存储。nutsdb与我们之前介绍过的buntdb有些类似，但是支持List、S</description>
    </item>
    
    <item>
      <title>Go 每日一库之 zerolog</title>
      <link>https://darjun.github.io/2020/04/24/godailylib/zerolog/</link>
      <pubDate>Fri, 24 Apr 2020 23:57:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/24/godailylib/zerolog/</guid>
      <description>简介 每个编程语言都有很多日志库，因为记录日志在每个项目中都是必须的。前面我们介绍了标准日志库log、好用的logrus和上一篇文章中介绍的由</description>
    </item>
    
    <item>
      <title>Go 每日一库之 zap</title>
      <link>https://darjun.github.io/2020/04/23/godailylib/zap/</link>
      <pubDate>Thu, 23 Apr 2020 23:07:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/23/godailylib/zap/</guid>
      <description>简介 在很早之前的文章中，我们介绍过 Go 标准日志库log和结构化的日志库logrus。在热点函数中记录日志对日志库的执行性能有较高的要求，不能影</description>
    </item>
    
    <item>
      <title>Go 每日一库之 go-app</title>
      <link>https://darjun.github.io/2020/04/22/godailylib/go-app/</link>
      <pubDate>Wed, 22 Apr 2020 21:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/22/godailylib/go-app/</guid>
      <description>简介 go-app是一个使用 Go + WebAssembly 技术编写渐进式 Web 应用的库。WebAssembly 是一种可以运行在现代浏览器中的新式代码。近两年来，WebAs</description>
    </item>
    
    <item>
      <title>Go 每日一库之 gron</title>
      <link>https://darjun.github.io/2020/04/20/godailylib/gron/</link>
      <pubDate>Sun, 19 Apr 2020 22:13:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/20/godailylib/gron/</guid>
      <description>简介 gron是一个比较小巧、灵活的定时任务库，可以执行定时的、周期性的任务。gron提供简洁的、并发安全的接口。我们先介绍gron库的使用，</description>
    </item>
    
    <item>
      <title>Go 每日一库之 plot</title>
      <link>https://darjun.github.io/2020/04/12/godailylib/plot/</link>
      <pubDate>Sun, 12 Apr 2020 21:46:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/12/godailylib/plot/</guid>
      <description>简介 本文介绍 Go 语言的一个非常强大、好用的绘图库——plot。plot内置了很多常用的组件，基本满足日常需求。同时，它也提供了定制化的接口，可</description>
    </item>
    
    <item>
      <title>Go 每日一库之 gentleman</title>
      <link>https://darjun.github.io/2020/04/07/godailylib/gentleman/</link>
      <pubDate>Tue, 07 Apr 2020 21:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/07/godailylib/gentleman/</guid>
      <description>简介 gentleman是一个功能齐全、插件驱动的 HTTP 客户端。gentleman以扩展性为原则，可以基于内置的或第三方插件创建具有丰富特性的、可</description>
    </item>
    
    <item>
      <title>Go 每日一库之 gopsutil</title>
      <link>https://darjun.github.io/2020/04/05/godailylib/gopsutil/</link>
      <pubDate>Sun, 05 Apr 2020 21:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/05/godailylib/gopsutil/</guid>
      <description>简介 gopsutil是 Python 工具库psutil 的 Golang 移植版，可以帮助我们方便地获取各种系统和硬件信息。gopsutil为我们屏蔽了各个系统之间的差</description>
    </item>
    
    <item>
      <title>Go 每日一库之 validator</title>
      <link>https://darjun.github.io/2020/04/04/godailylib/validator/</link>
      <pubDate>Sat, 04 Apr 2020 20:40:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/04/godailylib/validator/</guid>
      <description>简介 今天我们来介绍一个非常实用的库——validator。validator用于对数据进行校验。在 Web 开发中，对用户传过来的数据我们都需要进行</description>
    </item>
    
    <item>
      <title>Go 每日一库之 govaluate</title>
      <link>https://darjun.github.io/2020/04/01/godailylib/govaluate/</link>
      <pubDate>Wed, 01 Apr 2020 14:06:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/01/godailylib/govaluate/</guid>
      <description>简介 今天我们介绍一个比较好玩的库govaluate。govaluate与 JavaScript 中的eval功能类似，用于计算任意表达式的值。此类功能函数在 JavaScript/Python 等动</description>
    </item>
    
    <item>
      <title>Go 每日一库之 jj</title>
      <link>https://darjun.github.io/2020/03/25/godailylib/jj/</link>
      <pubDate>Wed, 25 Mar 2020 22:52:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/03/25/godailylib/jj/</guid>
      <description>简介 在前面两篇文章中，我们分别介绍了快速读取 JSON 值的库gjson和快速设置 JSON 值的库sjson。今天我们介绍它们的作者tidwall的一个基于g</description>
    </item>
    
    <item>
      <title>Go 每日一库之 sjson</title>
      <link>https://darjun.github.io/2020/03/24/godailylib/sjson/</link>
      <pubDate>Tue, 24 Mar 2020 23:00:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/03/24/godailylib/sjson/</guid>
      <description>简介 在上一篇文章中我们介绍了如何使用gjson快速读取 JSON 串中的值。为了内容的完整性，今天我们介绍一下如何使用sjson快速设置 JSON 串中的值。 快</description>
    </item>
    
  </channel>
</rss>