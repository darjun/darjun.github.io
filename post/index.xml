<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 大俊的博客</title>
    <link>https://darjun.github.io/post/</link>
    <description>Recent content in Posts on 大俊的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>大俊</copyright>
    <lastBuildDate>Wed, 02 Sep 2020 20:07:55 +0000</lastBuildDate>
    
	<atom:link href="https://darjun.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>在本地运行 fyne 官网</title>
      <link>https://darjun.github.io/2020/09/02/godailylib/fyne3/</link>
      <pubDate>Wed, 02 Sep 2020 20:07:55 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/02/godailylib/fyne3/</guid>
      <description>简介 要深入学习和理解一个框架，官方文档是必须要仔细阅读的。fyne 官网有非常系统和详尽的文档。官方网站：https://fyne.io/。有</description>
    </item>
    
    <item>
      <title>Go 每日一库之 jobrunner</title>
      <link>https://darjun.github.io/2020/09/01/godailylib/jobrunner/</link>
      <pubDate>Tue, 01 Sep 2020 20:07:09 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/09/01/godailylib/jobrunner/</guid>
      <description>简介 我们在 Web 开发中时常会遇到这样的需求，执行一个操作之后，需要给用户一定形式的通知。例如，用户下单之后通过邮件发送电子发票，网上购票支付后通</description>
    </item>
    
    <item>
      <title>Go 每日一库之 mapstructure</title>
      <link>https://darjun.github.io/2020/07/29/godailylib/mapstructure/</link>
      <pubDate>Wed, 29 Jul 2020 05:40:24 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/07/29/godailylib/mapstructure/</guid>
      <description>简介 mapstructure用于将通用的map[string]interface{}解码到对应的 Go 结构体中，或者执行相反的操作。很多时候，解</description>
    </item>
    
    <item>
      <title>Go 每日一库之 cron</title>
      <link>https://darjun.github.io/2020/06/25/godailylib/cron/</link>
      <pubDate>Thu, 25 Jun 2020 22:53:53 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/25/godailylib/cron/</guid>
      <description>简介 cron一个用于管理定时任务的库，用 Go 实现 Linux 中crontab这个命令的效果。之前我们也介绍过一个类似的 Go 库——gron。gron代码小巧</description>
    </item>
    
    <item>
      <title>Go 每日一库之 cli</title>
      <link>https://darjun.github.io/2020/06/22/godailylib/cli/</link>
      <pubDate>Mon, 22 Jun 2020 08:46:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/22/godailylib/cli/</guid>
      <description>简介 cli是一个用于构建命令行程序的库。我们之前也介绍过一个用于构建命令行程序的库cobra。在功能上来说两者差不多，cobra的优势是提供</description>
    </item>
    
    <item>
      <title>Go 每日一库之 negroni</title>
      <link>https://darjun.github.io/2020/06/19/godailylib/negroni/</link>
      <pubDate>Fri, 19 Jun 2020 08:39:17 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/19/godailylib/negroni/</guid>
      <description>简介 negroni是一个专注于 HTTP 中间件的库。它小巧，无侵入，鼓励使用标准库net/http的处理器（Handler）。本文就来介绍一下这个库</description>
    </item>
    
    <item>
      <title>使用 fyne 编写一个计算器</title>
      <link>https://darjun.github.io/2020/06/18/godailylib/fyne2/</link>
      <pubDate>Thu, 18 Jun 2020 22:41:55 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/18/godailylib/fyne2/</guid>
      <description>简介 在上一篇文章中，我们介绍了一个 Go 的高颜值 GUI 库fyne。本文接着上一篇，介绍如何使用fyne编写一个简单的计算器程序。程序效果如下： 控件布</description>
    </item>
    
    <item>
      <title>Go 每日一库之 fyne</title>
      <link>https://darjun.github.io/2020/06/15/godailylib/fyne/</link>
      <pubDate>Mon, 15 Jun 2020 23:15:55 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/15/godailylib/fyne/</guid>
      <description>简介 Go 语言生态中，GUI 一直是短板，更别说跨平台的 GUI 了。fyne向前迈了一大步。fyne 是 Go 语言编写的跨平台的 UI 库，它可以很方便地移植到手机</description>
    </item>
    
    <item>
      <title>Go 每日一库之 casbin</title>
      <link>https://darjun.github.io/2020/06/12/godailylib/casbin/</link>
      <pubDate>Fri, 12 Jun 2020 23:06:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/12/godailylib/casbin/</guid>
      <description>简介 权限管理在几乎每个系统中都是必备的模块。如果项目开发每次都要实现一次权限管理，无疑会浪费开发时间，增加开发成本。因此，casbin库出现</description>
    </item>
    
    <item>
      <title>Go 每日一库之 twirp</title>
      <link>https://darjun.github.io/2020/06/07/godailylib/twirp/</link>
      <pubDate>Sun, 07 Jun 2020 17:18:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/06/07/godailylib/twirp/</guid>
      <description>简介 twirp是一个基于 Google Protobuf 的 RPC 框架。twirp通过在.proto文件中定义服务，然后自动生产服务器和客户端的代码。让我们可以将更多的精力放</description>
    </item>
    
    <item>
      <title>Go 每日一库之 rpcx</title>
      <link>https://darjun.github.io/2020/05/21/godailylib/rpcx/</link>
      <pubDate>Thu, 21 May 2020 23:04:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/21/godailylib/rpcx/</guid>
      <description>简介 在之前的两篇文章rpc和json-rpc中，我们介绍了 Go 标准库提供的rpc实现。在实际开发中，rpc库的功能还是有所欠缺。今天我们介绍一</description>
    </item>
    
    <item>
      <title>Go 每日一库之 jsonrpc</title>
      <link>https://darjun.github.io/2020/05/10/godailylib/jsonrpc/</link>
      <pubDate>Sun, 10 May 2020 19:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/10/godailylib/jsonrpc/</guid>
      <description>简介 在上一篇文章中我们介绍了 Go 标准库net/rpc的用法。在默认情况下，rpc库内部使用gob格式传输数据。我们仿造gob的编解码器实现了一</description>
    </item>
    
    <item>
      <title>Go 每日一库之 rpc</title>
      <link>https://darjun.github.io/2020/05/08/godailylib/rpc/</link>
      <pubDate>Fri, 08 May 2020 21:12:22 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/08/godailylib/rpc/</guid>
      <description>简介 RPC（Remote Procedure Call）是远程方法调用的缩写，它可以通过网络调用远程对象的方法。Go 标准库net/rpc提供了一个简单、强大且高</description>
    </item>
    
    <item>
      <title>Go 每日一库之 xorm</title>
      <link>https://darjun.github.io/2020/05/07/godailylib/xorm/</link>
      <pubDate>Thu, 07 May 2020 21:56:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/05/07/godailylib/xorm/</guid>
      <description>简介 Go 标准库提供的数据库接口database/sql比较底层，使用它来操作数据库非常繁琐，而且容易出错。因而社区开源了不少第三方库，如上一篇</description>
    </item>
    
    <item>
      <title>Go 每日一库之 sqlc</title>
      <link>https://darjun.github.io/2020/04/28/godailylib/sqlc/</link>
      <pubDate>Tue, 28 Apr 2020 23:09:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/28/godailylib/sqlc/</guid>
      <description>简介 在 Go 语言中编写数据库操作代码真的非常痛苦！database/sql标准库提供的都是比较底层的接口。我们需要编写大量重复的代码。大量的模板</description>
    </item>
    
    <item>
      <title>Go 每日一库之 nutsdb</title>
      <link>https://darjun.github.io/2020/04/25/godailylib/nutsdb/</link>
      <pubDate>Sat, 25 Apr 2020 23:40:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/25/godailylib/nutsdb/</guid>
      <description>简介 nutsdb是一个完全由 Go 编写的简单、快速、可嵌入的持久化存储。nutsdb与我们之前介绍过的buntdb有些类似，但是支持List、S</description>
    </item>
    
    <item>
      <title>Go 每日一库之 zerolog</title>
      <link>https://darjun.github.io/2020/04/24/godailylib/zerolog/</link>
      <pubDate>Fri, 24 Apr 2020 23:57:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/24/godailylib/zerolog/</guid>
      <description>简介 每个编程语言都有很多日志库，因为记录日志在每个项目中都是必须的。前面我们介绍了标准日志库log、好用的logrus和上一篇文章中介绍的由</description>
    </item>
    
    <item>
      <title>Go 每日一库之 zap</title>
      <link>https://darjun.github.io/2020/04/23/godailylib/zap/</link>
      <pubDate>Thu, 23 Apr 2020 23:07:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/23/godailylib/zap/</guid>
      <description>简介 在很早之前的文章中，我们介绍过 Go 标准日志库log和结构化的日志库logrus。在热点函数中记录日志对日志库的执行性能有较高的要求，不能影</description>
    </item>
    
    <item>
      <title>Go 每日一库之 go-app</title>
      <link>https://darjun.github.io/2020/04/22/godailylib/go-app/</link>
      <pubDate>Wed, 22 Apr 2020 21:30:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/22/godailylib/go-app/</guid>
      <description>简介 go-app是一个使用 Go + WebAssembly 技术编写渐进式 Web 应用的库。WebAssembly 是一种可以运行在现代浏览器中的新式代码。近两年来，WebAs</description>
    </item>
    
    <item>
      <title>Go 每日一库之 gron</title>
      <link>https://darjun.github.io/2020/04/20/godailylib/gron/</link>
      <pubDate>Sun, 19 Apr 2020 22:13:23 +0000</pubDate>
      
      <guid>https://darjun.github.io/2020/04/20/godailylib/gron/</guid>
      <description>简介 gron是一个比较小巧、灵活的定时任务库，可以执行定时的、周期性的任务。gron提供简洁的、并发安全的接口。我们先介绍gron库的使用，</description>
    </item>
    
  </channel>
</rss>